import cv2
import numpy as np
import serial

arduino = serial.Serial('COM6', 9600)

def nothing(x): pass

cv2.namedWindow('Trackbars')
cv2.createTrackbar('RedLow', 'Trackbars', 0, 255, nothing)
cv2.createTrackbar('RedHigh', 'Trackbars', 255, 255, nothing)
cv2.createTrackbar('GreenLow', 'Trackbars', 0, 255, nothing)
cv2.createTrackbar('GreenHigh', 'Trackbars', 255, 255, nothing)
cv2.createTrackbar('BlueLow', 'Trackbars', 0, 255, nothing)
cv2.createTrackbar('BlueHigh', 'Trackbars', 255, 255, nothing)

cap = cv2.VideoCapture(0)

while True:
    ret, img = cap.read()
    if not ret:
        print("Failed to grab frame")
        break

    redLow = cv2.getTrackbarPos('RedLow', 'Trackbars')
    redHigh = cv2.getTrackbarPos('RedHigh', 'Trackbars')
    greenLow = cv2.getTrackbarPos('GreenLow', 'Trackbars')
    greenHigh = cv2.getTrackbarPos('GreenHigh', 'Trackbars')
    blueLow = cv2.getTrackbarPos('BlueLow', 'Trackbars')
    blueHigh = cv2.getTrackbarPos('BlueHigh', 'Trackbars')

    lowerBound = np.array([blueLow, greenLow, redLow])
    upperBound = np.array([blueHigh, greenHigh, redHigh])
    FGmask = cv2.inRange(img, lowerBound, upperBound)
    cv2.imshow('FGmask', FGmask)
    FG = cv2.bitwise_and(img, img, mask=FGmask)
    cv2.imshow('FG', FG)

    contours, _ = cv2.findContours(FGmask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    for contour in contours:
        area = cv2.contourArea(contour)
        if area > 500:
            x, y, w, h = cv2.boundingRect(contour)
            centerX = int((x + x + w) / 2)
            centerY = int((y + y + h) / 2)
            arduino.write(f"{centerX},{centerY}\n".encode())
            cv2.rectangle(img, (x, y), (x+w, y+h), (0, 255, 0), 2)
    # `cv2.imshow('Final', FG)
    cv2.imshow('Frame', img)
    if cv2.waitKey(1) == 27:
        break

cap.release()
cv2.destroyAllWindows()
